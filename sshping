#!/usr/bin/env python3
# author: thuhak.zhou@nio.com

import pwd
import os
import time
import paramiko
from argparse import ArgumentParser
 
 
def chkssh(ip, user, port=22):
    try:
        s = paramiko.SSHClient()
        s.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        start = time.perf_counter()
        s.connect(hostname=ip, port=port, username=user)
        end = time.perf_counter()
        cost = round((end - start)*1000, 3)
        print("connecting to {}... cost {}ms".format(ip, cost))
        return 0
    except KeyboardInterrupt:
        return -1
    except:
        print('request time out..')
        return 1
    finally:
        s.close()
 
 
if __name__ == "__main__":
    uid = os.getuid()
    localuser = pwd.getpwuid(uid)[0]
    parser = ArgumentParser('sshping')
    parser.add_argument('ip')
    parser.add_argument('-u', '--user', default=localuser)
    parser.add_argument('-t', '--times', default=None )
    parser.add_argument('-p', '--port', type=int, default=22)
    args = parser.parse_args()
    ip = args.ip
    user = args.user
    port = args.port
    times = args.times
    lost = 0
    total = 0
    if times is None:
        while True:
            r = chkssh(ip, user, port)
            total += 1
            if r == 1:
                lost += 1
            elif r == -1:
                break
    else:
        for _ in range(times+1):
            r = chkssh(ip, user, port)
            total += 1
            if r == 1:
                lost += 1
            elif r == -1:
                break
    lostrate = round(lost*100/total,3)
    print()
    print('{} ssh requests sent, {} lost, lost rate {}%'.format(total, lost, lostrate))
